using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Data.SqlClient;
using System.Data;
using FYP2021.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Hosting;
using System.IO;
using CsvHelper;
using System.Globalization;

namespace FYP2021.Controllers
{
    public class CSVHelperTestController : Controller
    {
        [HttpGet]
        public IActionResult IndexTest(List<CSV> students = null)
        {
            students = students == null ? new List<CSV>() : students;
            return View(students);
        }

        [HttpPost]
        public IActionResult IndexTest(IFormFile file, [FromServices] IHostingEnvironment hostingEnvironment)
        {
            if (file != null)
            {
                if (file.FileName.EndsWith(".csv"))
                {
                    #region Upload CSV
                    string fileName = $"{hostingEnvironment.WebRootPath}\\files\\{file.FileName}";
                    using (FileStream fileStream = System.IO.File.Create(fileName))
                    {
                        file.CopyTo(fileStream);
                        fileStream.Flush();
                    }
                    var students = this.GetStudentList(file.FileName);
                    return IndexTest(students);
                    #endregion
                }
                else
                {
                    TempData["Message"] = "File Not In CSV Format!";
                    TempData["MsgType"] = "warning";
                }


            }
            else
            {
                TempData["Message"] = "File Not Found!";
                TempData["MsgType"] = "warning";
            }


            return IndexTest();



        }

        public List<CSV> GetStudentList(string fileName)
        {
            List<CSV> students = new List<CSV>();

            #region Read CSV
            var path = $"{Directory.GetCurrentDirectory()}{@"\wwwroot\files"}" + "\\" + fileName;
            using (var reader = new StreamReader(path))
            using (var csv = new CsvReader(reader, CultureInfo.InvariantCulture))
            {

                csv.Read();
                csv.ReadHeader();
                while (csv.Read())
                {

                    var student = csv.GetRecord<CSV>();

                    students.Add(student);

                    string cardstatus = student.CardStatus;
                    string studentemail = student.StudEmail;
                    

                    //string date = csv.GetRecord(student.StudEmail);
                    //DateTime cardstatusdate = DateTime.Parse(csv.GetField(5));

                    //DataTable table = new DataTable();
                    //table.Columns.Add(cardstatus);
                    //table.Columns.Add(studentemail);
                    //table.Columns.Add(date); 


                    //foreach(Student st in students)
                    //{
                    List<CSV> list = DBUtl.GetList<CSV>("SELECT * FROM Student WHERE student_email = '{0}'", studentemail);

                    if (list.Count > 0)
                    {
                        string update = @"UPDATE Student SET card_status='{0}' WHERE student_email ='{1}'";

                        int result = DBUtl.ExecSQL(update, cardstatus, student.StudEmail);
                        if (result == 1)
                        {
                            TempData["Message"] = "Card Status Updated";
                            TempData["MsgType"] = "success";

                            string email = student.StudEmail;
                            string cardStatus = student.CardStatus;
                            string subject = "New Card Status";

                            string template =
                                    @"Dear student, <br/>
                                    <p>Your new updated card status is {0}. For more information, visit the website.</p>
                                <br/>
                                <p>This email is automatically generated by the Office of Organisation and Service Excellence, Republic Polytechnic. Please do not reply to this email address.<p>
                                    Sincerely RP Team";

                            string msg = String.Format(template, cardStatus);
                            string res;
                            if (EmailUtl.SendEmail(email, subject, msg, out res))
                            {

                                ViewData["Message"] = "Email Successfully Sent!";
                                ViewData["MsgType"] = "success";
                            }

                            else
                            {
                                ViewData["Message"] = result;
                                ViewData["MsgType"] = "warning";
                            }
                        }
                        else
                        {
                            TempData["Message"] = DBUtl.DB_Message;
                            TempData["MsgType"] = "danger";
                        }
                    }
                    else
                    {
                        TempData["Message"] = "Student Not Found!";
                        TempData["MsgType"] = "warning";

                    }

                }
                return students;


            }
        }
        #endregion


    }

}

